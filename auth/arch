for an in-depth spec of the protocol, see the protocol file; this file has a general overview of the protocol for quick reference;

routes:
/login
/refresh
/logout
/register
/update/username
/update/email
/update/password
/delete



JWTs (JSON Web Tokens):
refresh (only used by client and auth server; long lifetime; terminated by logout; used to get a new resource token)
{
- expiration date
- user id
- token (to id this JWT)
}
resource (short lifetime; used with resource server to authenticate)
{
- expiration time
- user id
- username
- email
}



login:
server
----------------------------------------
^                                  v
|(username OR email),password      |
|                       refresh JWT|
^                                  v
----------------------------------------
client


refresh:
server
-----------------------
^                  v
|refresh JWT       |
|      resource JWT|
^                  v
-----------------------
client


logout:
server
----------------------
^                 v
|refresh JWT      |
|            empty|
^                 v
----------------------
client


register:
server
----------------------------------
^                             v
|username,email,password      |
|                        empty|
^                             v
----------------------------------
client


update:
server
------------------------------------------------------
^                                                 v
|resource JWT, new (email/username/password)      |
|                                            empty|
^                                                 v
------------------------------------------------------
client


delete:
server
----------------------
^                 v
|refresh JWT      |
|            empty|
^                 v
----------------------
client



Stored data:
  {id => username,email,password-hash}
  [valid refresh JWT tokens]

Protocols:
  login
  refresh-resource-JWT
  logout
  register
  update-username
  update-email
  update-password
  delete-account