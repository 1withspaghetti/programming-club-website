

structs:
account {
  name
  email
  id
}


stored data:
table {account-id => user-salt, password-hash}
table {account-id => name, email}


procedures:
get-account-id(name-or-email)
auth-user(account-id, password-hash)
register-user(name, email, pre-salt-password-hash)
update-user-email(account-id, new-email)
update-user-name(account-id, new-name)
update-user-password(account-id, new-password-pre-salt-hash)
delete-user(account-id)

get-global-salt()


functions:
salt-and-hash(unsalted-hash, salt)




Login page allows user to save password hash to a cookie; this cookie is used on each request to allow the server to authenticate the user.


password verif:
        (client) | (server)
pwd => hash => send => per-user-salt => main-salt => hash => check
